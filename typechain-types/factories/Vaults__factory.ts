/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Vaults, VaultsInterface } from "../Vaults";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_claimTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
    ],
    name: "ClaimVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "CloseVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_unlockTimestamp",
        type: "uint256",
      },
    ],
    name: "CreateVault",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "claimVault",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "closeVault",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "unlockTimestamp",
        type: "uint256",
      },
    ],
    name: "createGrant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numVaults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vaults",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060025534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610de6806100656000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063360c328811610050578063360c3288146100ba5780638c64ea4a146100ea578063a41782871461011e57610067565b8063168db5301461006c578063264a62081461009c575b600080fd5b6100866004803603810190610081919061084a565b61014e565b6040516100939190610c56565b60405180910390f35b6100a46103a1565b6040516100b19190610c56565b60405180910390f35b6100d460048036038101906100cf91906108d6565b6103a7565b6040516100e19190610b7b565b60405180910390f35b61010460048036038101906100ff91906108d6565b6104e7565b604051610115959493929190610b28565b60405180910390f35b610138600480360381019061013391906108d6565b61056a565b6040516101459190610b7b565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d690610c36565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161021c93929190610aac565b602060405180830381600087803b15801561023657600080fd5b505af115801561024a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026e91906108ad565b5060006002600081548092919061028490610cf3565b9190505590506000600160008381526020019081526020016000209050868160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010181905550848160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816002018190555060008160030160146101000a81548160ff021916908315150217905550817f1ead14ec1ba50ea74b0d3a6ff8d9f94f5a02e1fdf0d0cae7879b13319f5171c38888888860405161038c9493929190610ae3565b60405180910390a28192505050949350505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610c36565b60405180910390fd5b600254821061047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047390610c16565b60405180910390fd5b600060016000848152602001908152602001600020905060018160030160146101000a81548160ff021916908315150217905550827f08cce6319801632de6487ae199a608ca4a17bec2400b70558cf24aa0373ba31260405160405180910390a26001915050919050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b600060025482106105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a790610bd6565b60405180910390fd5b60006001600084815260200190815260200160002090508060030160149054906101000a900460ff1615610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061090610bf6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290610b96565b60405180910390fd5b42816002015411156106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990610bb6565b60405180910390fd5b60018160030160146101000a81548160ff0219169083151502179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600101546040518463ffffffff1660e01b815260040161077493929190610aac565b602060405180830381600087803b15801561078e57600080fd5b505af11580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c691906108ad565b50827ff4a91b6eca6973b9999d9239d850ec93b74b668e9c21fb75c1ead6d0bf7c2f1042336040516107f9929190610c71565b60405180910390a26001915050919050565b60008135905061081a81610d6b565b92915050565b60008151905061082f81610d82565b92915050565b60008135905061084481610d99565b92915050565b6000806000806080858703121561086057600080fd5b600061086e8782880161080b565b945050602061087f87828801610835565b93505060406108908782880161080b565b92505060606108a187828801610835565b91505092959194509250565b6000602082840312156108bf57600080fd5b60006108cd84828501610820565b91505092915050565b6000602082840312156108e857600080fd5b60006108f684828501610835565b91505092915050565b61090881610cab565b82525050565b61091781610cbd565b82525050565b600061092a600d83610c9a565b91507f6e6f7420726563697069656e74000000000000000000000000000000000000006000830152602082019050919050565b600061096a600c83610c9a565b91507f6e6f7420756e6c6f636b656400000000000000000000000000000000000000006000830152602082019050919050565b60006109aa600f83610c9a565b91507f6772616e74206e6f7420666f756e6400000000000000000000000000000000006000830152602082019050919050565b60006109ea600683610c9a565b91507f636c6f73656400000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000610a2a600f83610c9a565b91507f7661756c74206e6f7420666f756e6400000000000000000000000000000000006000830152602082019050919050565b6000610a6a600983610c9a565b91507f6e6f74206f776e657200000000000000000000000000000000000000000000006000830152602082019050919050565b610aa681610ce9565b82525050565b6000606082019050610ac160008301866108ff565b610ace60208301856108ff565b610adb6040830184610a9d565b949350505050565b6000608082019050610af860008301876108ff565b610b056020830186610a9d565b610b1260408301856108ff565b610b1f6060830184610a9d565b95945050505050565b600060a082019050610b3d60008301886108ff565b610b4a6020830187610a9d565b610b576040830186610a9d565b610b6460608301856108ff565b610b71608083018461090e565b9695505050505050565b6000602082019050610b90600083018461090e565b92915050565b60006020820190508181036000830152610baf8161091d565b9050919050565b60006020820190508181036000830152610bcf8161095d565b9050919050565b60006020820190508181036000830152610bef8161099d565b9050919050565b60006020820190508181036000830152610c0f816109dd565b9050919050565b60006020820190508181036000830152610c2f81610a1d565b9050919050565b60006020820190508181036000830152610c4f81610a5d565b9050919050565b6000602082019050610c6b6000830184610a9d565b92915050565b6000604082019050610c866000830185610a9d565b610c9360208301846108ff565b9392505050565b600082825260208201905092915050565b6000610cb682610cc9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610cfe82610ce9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d3157610d30610d3c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610d7481610cab565b8114610d7f57600080fd5b50565b610d8b81610cbd565b8114610d9657600080fd5b50565b610da281610ce9565b8114610dad57600080fd5b5056fea264697066735822122078be867612ab8a0dd7a48553bb83494771d57bd5cc39fc3d03217f7d9cfd2e8164736f6c63430008000033";

type VaultsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vaults__factory extends ContractFactory {
  constructor(...args: VaultsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vaults> {
    return super.deploy(overrides || {}) as Promise<Vaults>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vaults {
    return super.attach(address) as Vaults;
  }
  override connect(signer: Signer): Vaults__factory {
    return super.connect(signer) as Vaults__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultsInterface {
    return new utils.Interface(_abi) as VaultsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vaults {
    return new Contract(address, _abi, signerOrProvider) as Vaults;
  }
}
