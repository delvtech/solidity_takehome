/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200130f3803806200130f8339818101604052810190620000379190620003a2565b81600090805190602001906200004f92919062000155565b5080600190805190602001906200006892919062000155565b506012600260006101000a81548160ff021916908360ff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050506200048b565b828054620001639062000456565b90600052602060002090601f016020900481019282620001875760008555620001d3565b82601f10620001a257805160ff1916838001178555620001d3565b82800160010185558215620001d3579182015b82811115620001d2578251825591602001919060010190620001b5565b5b509050620001e29190620001e6565b5090565b5b8082111562000201576000816000905550600101620001e7565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200026e8262000223565b810181811067ffffffffffffffff8211171562000290576200028f62000234565b5b80604052505050565b6000620002a562000205565b9050620002b3828262000263565b919050565b600067ffffffffffffffff821115620002d657620002d562000234565b5b620002e18262000223565b9050602081019050919050565b60005b838110156200030e578082015181840152602081019050620002f1565b838111156200031e576000848401525b50505050565b60006200033b6200033584620002b8565b62000299565b9050828152602081018484840111156200035a57620003596200021e565b5b62000367848285620002ee565b509392505050565b600082601f83011262000387576200038662000219565b5b81516200039984826020860162000324565b91505092915050565b60008060408385031215620003bc57620003bb6200020f565b5b600083015167ffffffffffffffff811115620003dd57620003dc62000214565b5b620003eb858286016200036f565b925050602083015167ffffffffffffffff8111156200040f576200040e62000214565b5b6200041d858286016200036f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200046f57607f821691505b60208210810362000485576200048462000427565b5b50919050565b610e74806200049b6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806340c10f191161007657806395d89b411161005b57806395d89b41146101c9578063a9059cbb146101e7578063dd62ed3e14610217576100be565b806340c10f191461017d57806370a0823114610199576100be565b806318160ddd116100a757806318160ddd1461011157806323b872dd1461012f578063313ce5671461015f576100be565b806306fdde03146100c3578063095ea7b3146100e1575b600080fd5b6100cb610247565b6040516100d891906109fb565b60405180910390f35b6100fb60048036038101906100f69190610ab6565b6102d5565b6040516101089190610b11565b60405180910390f35b6101196103c7565b6040516101269190610b3b565b60405180910390f35b61014960048036038101906101449190610b56565b6103cd565b6040516101569190610b11565b60405180910390f35b610167610750565b6040516101749190610bc5565b60405180910390f35b61019760048036038101906101929190610ab6565b610763565b005b6101b360048036038101906101ae9190610be0565b610771565b6040516101c09190610b3b565b60405180910390f35b6101d1610789565b6040516101de91906109fb565b60405180910390f35b61020160048036038101906101fc9190610ab6565b610817565b60405161020e9190610b11565b60405180910390f35b610231600480360381019061022c9190610c0d565b61082c565b60405161023e9190610b3b565b60405180910390f35b6000805461025490610c7c565b80601f016020809104026020016040519081016040528092919081815260200182805461028090610c7c565b80156102cd5780601f106102a2576101008083540402835291602001916102cd565b820191906000526020600020905b8154815290600101906020018083116102b057829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103b59190610b3b565b60405180910390a36001905092915050565b60035481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c90610cf9565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610602576000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106005783811015610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90610d65565b60405180910390fd5b838161057f9190610db4565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b828161060e9190610db4565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461069c9190610de8565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161073c9190610b3b565b60405180910390a360019150509392505050565b600260009054906101000a900460ff1681565b61076d8282610851565b5050565b60046020528060005260406000206000915090505481565b6001805461079690610c7c565b80601f01602080910402602001604051908101604052809291908181526020018280546107c290610c7c565b801561080f5780601f106107e45761010080835404028352916020019161080f565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b505050505081565b60006108243384846103cd565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089c9190610de8565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360008282546108f19190610de8565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109569190610b3b565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561099c578082015181840152602081019050610981565b838111156109ab576000848401525b50505050565b6000601f19601f8301169050919050565b60006109cd82610962565b6109d7818561096d565b93506109e781856020860161097e565b6109f0816109b1565b840191505092915050565b60006020820190508181036000830152610a1581846109c2565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4d82610a22565b9050919050565b610a5d81610a42565b8114610a6857600080fd5b50565b600081359050610a7a81610a54565b92915050565b6000819050919050565b610a9381610a80565b8114610a9e57600080fd5b50565b600081359050610ab081610a8a565b92915050565b60008060408385031215610acd57610acc610a1d565b5b6000610adb85828601610a6b565b9250506020610aec85828601610aa1565b9150509250929050565b60008115159050919050565b610b0b81610af6565b82525050565b6000602082019050610b266000830184610b02565b92915050565b610b3581610a80565b82525050565b6000602082019050610b506000830184610b2c565b92915050565b600080600060608486031215610b6f57610b6e610a1d565b5b6000610b7d86828701610a6b565b9350506020610b8e86828701610a6b565b9250506040610b9f86828701610aa1565b9150509250925092565b600060ff82169050919050565b610bbf81610ba9565b82525050565b6000602082019050610bda6000830184610bb6565b92915050565b600060208284031215610bf657610bf5610a1d565b5b6000610c0484828501610a6b565b91505092915050565b60008060408385031215610c2457610c23610a1d565b5b6000610c3285828601610a6b565b9250506020610c4385828601610a6b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c9457607f821691505b602082108103610ca757610ca6610c4d565b5b50919050565b7f45524332303a20696e73756666696369656e742d62616c616e63650000000000600082015250565b6000610ce3601b8361096d565b9150610cee82610cad565b602082019050919050565b60006020820190508181036000830152610d1281610cd6565b9050919050565b7f45524332303a20696e73756666696369656e742d616c6c6f77616e6365000000600082015250565b6000610d4f601d8361096d565b9150610d5a82610d19565b602082019050919050565b60006020820190508181036000830152610d7e81610d42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dbf82610a80565b9150610dca83610a80565b925082821015610ddd57610ddc610d85565b5b828203905092915050565b6000610df382610a80565b9150610dfe83610a80565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3357610e32610d85565b5b82820190509291505056fea26469706673582212207dfc7641dc22972c594fcd03386ab4357ce358b0ad8c3ceca342538398eb30d764736f6c634300080e0033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
